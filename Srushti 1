Q.1 ,
  1) Calculate the total runs scored by each playenp import numpy as 
  runs= np.array([    [45,50, 30, 60, 25],    [10, 15, 5, 20, 12],    [80, 60, 75, 100, 90],    [25, 30, 20, 35, 40],    [0, 5, 10, 0, 2],    [50, 55, 60, 65, 70],    [35, 40, 45, 50, 55],    [100, 110, 120, 115, 125],    [10, 12, 15, 10, 8],    [70, 80, 85, 90, 95],    [40, 45, 50, 55, 60] ])
  2) Identify the highest score made by any player in a single match.
  3)Determine the average runs scored per match by eah player.

import numpy as np
runs = np.array([    [45, 50, 30, 60, 25],    [10, 15, 5, 20, 12],    [80, 60, 75, 100, 90],    [25, 30, 20, 35, 40],    [0, 5, 10, 0, 2],    [50, 55, 60, 65, 70],    [35, 40, 45, 50, 55],    [100, 110, 120, 115, 125],    [10, 12, 15, 10, 8],    [70, 80, 85, 90, 95],    [40, 45, 50, 55, 60] ])
x=np.sum(runs[0])
x=np.max(runs[1])
x=np.mean(runs[2])

 
   # Sales data: rows = products, columns = days 
   sales_data = np.array([    [150, 200, 250, 300, 400, 350, 500],  # Product 1    [120, 180, 210, 240, 310, 280, 400],  # Product 2    [100, 130, 190, 220, 300, 270, 350],  # Product 3    [80,  90,  150, 180, 240, 220, 300],  # Product 4    [50,  60,  80,  100, 130, 120, 180]   # Product 5 ])
   1) Write code to determine the shape of the sales_data array.
   2) Identify the number of dimensions in the sales_data array
   3)Find the data type of elements stored in the sales_data array
   4)Determine the total number of elements in the sales_data array.
   5) Calculate the total memory (in bytes) used by the sales_data array
   6) Retrieve the sales data for:
Product 3 on Day 4.
All sales data for Product 1.
All sales data for Day 5.
7) Extract and print:
Sales data for the first 3 products.
Sales data for the last 2 days.
8)Transpose the Array
Transpose the array so that rows represent days and columns represent products.

import numpy as np
sales_data = np.array([    [150, 200, 250, 300, 400, 350, 500],    [120, 180, 210, 240, 310, 280, 400],     [100, 130, 190, 220, 300, 270, 350],    [80,  90,  150, 180, 240, 220, 300],    [50,  60,  80,  100, 130, 120, 180]    ])
x=np.shape(sales_data)
x=np.ndim(sales_data)
x=np.dtype[sales_data]
x=np.size[sales_data]
x=np.transpose(sales_data)
